!function(e,o){"object"==typeof exports&&"undefined"!=typeof module?module.exports=o():"function"==typeof define&&define.amd?define(o):(e="undefined"!=typeof globalThis?globalThis:e||self).VectorCustomProtocol=o()}(this,(function(){"use strict";return e=>{let o=new Map;const t=void 0!==e.addProtocol;return t||(e.addProtocol=e.addProtocol||((e,t)=>{o.set(e,t)}),e.removeProtocol=e.removeProtocol||(e=>{o.delete(e)})),class extends(e.Style.getSourceType("vector")){constructor(e,o,t,n){super(e,o,t,n)}loadTile(e,n){const r=e.tileID.canonical.url(this.tiles,this.scheme),l=r.substring(0,r.indexOf("://"));if(!t&&o.has(l)){const t=(o,t,r,l)=>{if(o)throw o;{const o=new Uint8Array(t),r=URL.createObjectURL(new Blob([o]));e.tileID.canonical.url=function(){return delete e.tileID.canonical.url,r},super.loadTile(e,(function(){URL.revokeObjectURL(r),n(...arguments)}))}};o.get(l)({url:r,type:"arrayBuffer"},t)}else super.loadTile(e,n)}}}}));
//# sourceMappingURL=mapbox-gl-vector-custom-protocol.min.js.map
